# Codecov configuration for PawControl Integration
# https://docs.codecov.io/docs/codecov-yaml

codecov:
  require_ci_to_pass: false
  notify:
    wait_for_ci: true
  bot: <codecov-bot> #this is a username for Github/Gitlab/Bitbucket

  coverage:
    status:
      project:
       default:   # default is the status check's name, not default settings
        target: auto
        threshold: 1%
        base: auto
        flags:
          - unit
        paths:
          - custom_components/pawcontrol
       # advanced settings
        branches:
          - main
        if_not_found: success
        if_ci_failed: success #success, failure, error, ignore
        informational: false
        only_pulls: false
    tests:  # declare a new status context "tests"
        target: 100%  # we always want 100% coverage here
        paths: "tests/"  # only include coverage in "tests/" folder
    patch:
      default:
        target: 90%
        threshold: 1%
        base: auto
        if_not_found: success
        if_ci_failed: error
        informational: false
        only_pulls: false
    changes: false
  precision: 2
  round: down
  range: "75...100"

parsers:
  gcov:
    branch_detection:
      conditional: true
      loop: true
      method: true
      macro: false

comment:
  layout: "header,reach,diff,flags,files,footer"
  behavior: default
  require_changes: false
  require_base: false
  require_head: true
  branches:
    - main

ignore:
  - "tests/**/*"
  - "docs/**/*"
  - "scripts/**/*"
  - "**/__pycache__/**"
  - "**/test_*.py"
  - "**/conftest.py"
  - "setup.py"
  - "**/*.md"

flags:
  unittests:
    paths:
      - custom_components/pawcontrol
    carryforward: false

  integration:
    paths:
      - custom_components/pawcontrol
    carryforward: true

github_checks:
  annotations: true

# Upload settings
uploads:
  - name: "pawcontrol"
    path: "./coverage.xml"
    flags:
      - unittests
    report_type: "pytest"
