# Home Assistant konforme Ruff-Konfiguration
# Basiert auf https://github.com/home-assistant/core/.ruff.toml

target-version = "py312"  # HA 2025.8.1 verwendet Python 3.12+
line-length = 88

[lint]
# Home Assistant Standard Rules
select = [
    "B007", # Loop control variable {name} not used within loop body
    "B014", # Exception handler is an `except:` clause
    "C",    # complexity
    "D",    # docstrings
    "E",    # pycodestyle
    "F",    # pyflakes/autoflake
    "ICN001", # import concentions; {name} should be imported as {asname}
    "PGH004", # Use specific rule codes when using noqa
    "PLC0414", # Useless import alias. Import alias does not rename original package.
    "SIM105", # Use contextlib.suppress({exception}) instead of try-except-pass
    "SIM117", # Combine multiple with statements
    "SIM118", # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SIM201", # Use {left} != {right} instead of not {left} == {right}
    "SIM212", # Use {a} if {a} else {b} instead of {b} if not {a} else {a}
    "SIM300", # Yoda conditions. Use 'age == 42' instead of '42 == age'.
    "SIM401", # Use get from dict with default instead of conditional assignment
    "T20",    # flake8-print
    "TRY004", # Prefer TypeError exception for invalid type
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "UP",     # pyupgrade
    "W",      # pycodestyle
]

ignore = [
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "D404",  # First word of the docstring should not be This
    "D406",  # Section name should end with a newline
    "D407",  # Section name underlining
    "D411",  # Missing blank line before section
    "E501",  # line too long -> handled by black
    "E731",  # do not assign a lambda expression, use a def
    
    # Home Assistant specific ignores
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
]

[lint.flake8-pytest-style]
fixture-parentheses = false

[lint.isort]
force-sort-within-sections = true
known-first-party = [
    "homeassistant",
]
combine-as-imports = true
split-on-trailing-comma = false

[lint.mccabe]
max-complexity = 25

[lint.pydocstyle]
convention = "pep257"
