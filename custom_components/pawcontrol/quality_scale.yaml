# Home Assistant Quality Scale configuration for Paw Control
#
# Current focus: bring the integration up to the Bronze quality scale baseline.
# The checklist below highlights which requirements are complete and which
# still need additional work so we can track incremental improvements.
quality_scale: bronze

rules:
  has-owner:
    status: done
    comment: "Maintainer declared in manifest.json (@BigDaddy1990)."
  config-flow:
    status: done
    comment: "Config flow covers user setup, discovery, import, reauth and now ships data_description helper text."
  config-flow-test-coverage:
    status: todo
    comment: "Existing tests exercise only a subset of discovery, dashboard, module, and reconfigure paths; add coverage before claiming the Platinum rule."
  test-coverage:
    status: todo
    comment: "Config flow tests expanded significantly; remaining gap is lifting overall suite above the 95% Platinum threshold."

  has-entity-name:
    status: done
    comment: "Binary sensor entities now set _attr_has_entity_name=True so device names propagate automatically."
  entity-translations:
    status: done
    comment: "Binary sensor platforms assign translation keys and are covered by tests validating the localized titles."

  brands:
    status: todo
    comment: "Brand assets are not yet submitted under brands/pawcontrol."
  action-setup:
    status: todo
    comment: "Action handler coverage is pending; no automated end-to-end test captures service execution."
  appropriate-polling:
    status: done
    comment: "DogConfigRegistry clamps all update intervals to <=15 minutes and validates user-provided overrides."
  common-modules:
    status: todo
    comment: "Integration is missing shared helper coverage for standard diagnostics and logbook modules."

  config-flow-discovery:
    status: done
    comment: "Config flow implements Zeroconf, DHCP, USB, Bluetooth, and manual discovery steps."
  docs-actions:
    status: done
    comment: "Service usage documented in services.yaml and README."
  docs-high-level:
    status: done
    comment: "Integration overview provided in README.md."
  docs-installation:
    status: done
    comment: "Installation instructions available in docs/."
  docs-configuration:
    status: done
    comment: "Configuration guidance provided in docs/ and README."
  entity-unique-id:
    status: done
    comment: "All entities generated with stable unique IDs."
  integration-setup-errors:
    status: done
    comment: "Setup errors handled gracefully during entry creation."
  log-when-unavailable:
    status: done
    comment: "Entities log unavailable states with context."

  devices:
    status: done
    comment: "Each dog/device registers a corresponding device entry."
  diagnostics:
    status: done
    comment: "Diagnostics support implemented in diagnostics.py."
  discovery-update-info:
    status: done
    comment: "Discovery metadata persisted in config entries and refreshed on rediscovery."
  discovery-mqtt:
    status: exempt
    comment: "Integration hardware does not use MQTT discovery mechanisms."
  docs-data-update:
    status: done
    comment: "Data update strategy documented alongside coordinator details."
  docs-examples:
    status: done
    comment: "Example configurations shipped in docs/ and example_config.yaml."
  dynamic-devices:
    status: done
    comment: "Dogs/devices can be added or removed dynamically."
  entity-unavailable:
    status: done
    comment: "Entities expose unavailable states when data updates fail."
  log-invalid-data:
    status: done
    comment: "Invalid payloads validated and logged before processing."
  parallel-updates:
    status: done
    comment: "All platforms set PARALLEL_UPDATES = 0 so coordinators can refresh entities in parallel."
  reauthentication-flow:
    status: done
    comment: "Config flow implements async_step_reauth and async_step_reauth_confirm handling (see config_flow.py)."
  repair-issues:
    status: done
    comment: "Structured repairs surfaced via repairs.py."
  test-before-configure:
    status: done
    comment: "User input validated before persisting configuration."
  test-before-setup:
    status: done
    comment: "External dependencies validated before entry setup."
  unique-config-entry:
    status: done
    comment: "Single config entry enforced via unique IDs."

  async-dependency:
    status: done
    comment: "GPX exports use an in-process async-safe serializer with no synchronous third-party dependencies."
  inject-websocket-api:
    status: exempt
    comment: "Integration does not expose additional WebSocket APIs."
  strict-typing:
    status: done
    comment: "Runtime types provided via PawControlRuntimeData TypedDicts and ConfigEntry typing (see types.py)."
  translations:
    status: done
    comment: "User-facing strings translated and stored in translations/."
  icon-translations:
    status: done
    comment: "Entity icons localized through translation files."
