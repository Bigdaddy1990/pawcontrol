# Home Assistant Quality Scale configuration for Paw Control
#
# The integration currently aligns with the Bronze baseline. Higher-tier
# expectations remain documented below to keep track of the work still pending,
# but they are no longer advertised as satisfied.
quality_scale: bronze

rules:
  has-owner:
    status: done
    comment: "Maintainer declared in manifest.json (@BigDaddy1990)."
  config-flow:
    status: done
    comment: "Comprehensive config flow covering user setup, discovery, import, and reauth handling."
  test-coverage:
    status: exempt
    comment: "Bronze does not mandate a coverage floor. Track Platinum-level expectation separately in docs."

  config-flow-discovery:
    status: done
    comment: "Config flow implements Zeroconf, DHCP, USB, Bluetooth, and manual discovery steps."
  docs-actions:
    status: done
    comment: "Service usage documented in services.yaml and README."
  docs-high-level:
    status: done
    comment: "Integration overview provided in README.md."
  docs-installation:
    status: done
    comment: "Installation instructions available in docs/."
  docs-configuration:
    status: done
    comment: "Configuration guidance provided in docs/ and README."
  entity-unique-id:
    status: done
    comment: "All entities generated with stable unique IDs."
  integration-setup-errors:
    status: done
    comment: "Setup errors handled gracefully during entry creation."
  log-when-unavailable:
    status: done
    comment: "Entities log unavailable states with context."

  devices:
    status: done
    comment: "Each dog/device registers a corresponding device entry."
  diagnostics:
    status: done
    comment: "Diagnostics support implemented in diagnostics.py."
  discovery-update-info:
    status: done
    comment: "Discovery metadata persisted in config entries and refreshed on rediscovery."
  discovery-mqtt:
    status: exempt
    comment: "Integration hardware does not use MQTT discovery mechanisms."
  docs-data-update:
    status: done
    comment: "Data update strategy documented alongside coordinator details."
  docs-examples:
    status: done
    comment: "Example configurations shipped in docs/ and example_config.yaml."
  dynamic-devices:
    status: done
    comment: "Dogs/devices can be added or removed dynamically."
  entity-unavailable:
    status: done
    comment: "Entities expose unavailable states when data updates fail."
  log-invalid-data:
    status: done
    comment: "Invalid payloads validated and logged before processing."
  parallel-updates:
    status: done
    comment: "Data coordinator schedules parallel refreshes for entities."
  reauthentication-flow:
    status: exempt
    comment: "Integration does not require authentication, so reauth is not applicable."
  repair-issues:
    status: done
    comment: "Structured repairs surfaced via repairs.py."
  test-before-configure:
    status: done
    comment: "User input validated before persisting configuration."
  test-before-setup:
    status: done
    comment: "External dependencies validated before entry setup."
  unique-config-entry:
    status: done
    comment: "Single config entry enforced via unique IDs."

  async-dependency:
    status: done
    comment: "Integration interactions are fully async-friendly."
  inject-websocket-api:
    status: exempt
    comment: "Integration does not expose additional WebSocket APIs."
  strict-typing:
    status: done
    comment: "Runtime types provided via PawControlRuntimeData TypedDicts and ConfigEntry typing (see types.py)."
  translations:
    status: done
    comment: "User-facing strings translated and stored in translations/."
  icon-translations:
    status: done
    comment: "Entity icons localized through translation files."
