[build-system]
requires = ["setuptools>=75.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pawcontrol"
version = "1.0.0"
description = "Home Assistant integration for comprehensive smart dog management"
readme = "README.md"
authors = [{name = "BigDaddy1990"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
]
requires-python = ">=3.13"
dependencies = []

[project.urls]
"Homepage" = "https://github.com/BigDaddy1990/pawcontrol"
"Bug Reports" = "https://github.com/BigDaddy1990/pawcontrol/issues"
"Source" = "https://github.com/BigDaddy1990/pawcontrol"
"Documentation" = "https://github.com/BigDaddy1990/pawcontrol#readme"

[tool.setuptools]
platforms = ["any"]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["custom_components*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
minversion = "8.0"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
addopts = """
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --maxfail=5
    -ra
    --cov=custom_components/pawcontrol
    --cov-branch
"""
markers = [
    "asyncio: mark test as using asyncio",
    "unit: mark test as unit test", 
    "integration: mark test as integration test",
    "slow: mark test as slow running",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
branch = true
source = ["custom_components/pawcontrol"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
    "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false
precision = 2
fail_under = 75

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
target-version = "py313"
line-length = 88
src = ["custom_components/pawcontrol"]
extend-exclude = ["tests", "docs", "scripts"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "ASYNC",  # flake8-async
    "RUF",    # Ruff-specific rules
    "PERF",   # Performance linting
    "N",      # pep8-naming
]
ignore = [
    "E501",   # line too long (handled by formatter)
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E402"]
"tests/**" = ["D", "E402", "F401"]
"scripts/**" = ["D", "E402", "F401"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_error_codes = true
strict_equality = true
explicit_package_bases = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "homeassistant.*"
ignore_missing_imports = true

[tool.pylint.master]
ignore = ["tests"]
persistent = "no"
jobs = 0

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0330",  # wrong-hanging-indentation
    "R0801",  # duplicate-code
    "R0902",  # too-many-instance-attributes
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "W0212",  # protected-access
]

[tool.pylint.format]
max-line-length = 88

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]
