# pyproject.toml — nur Tooling für eine Home-Assistant Custom-Integration
[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-q -ra --strict-markers --strict-config --tb=short --disable-warnings --maxfail=5"
asyncio = "auto"
markers = ["asyncio: mark a test as using asyncio"]
testpaths = [
    "tests/",
    "custom_components/pawcontrol/",
]

[tool.ruff]
target-version = "py313"
line-length = 88
src = ["custom_components/pawcontrol", "tests"]
extend-exclude = ["tests", "docs", "scripts"]
markers = ["asyncio: mark a test as using asyncio"]

[tool.ruff.lint]
select = ["E","F","W","I","UP","B","SIM","RUF","PERF","FURB","N"]
extend-select = ["D200","D205"]
ignore = ["E501","D100","D101","D102","D103","D104","D105","D106","D107"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["test_*", "__init__*", "conftest*", "*example*"]

[tool.mypy]
python_version = "3.13"
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
ignore_missing_imports = true
explicit_package_bases = true

[tool.coverage.run]
branch = true
source = ["custom_components/pawcontrol"]

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 2
