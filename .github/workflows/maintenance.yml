name: HA Maintenance Tasks

on:
  schedule:
    # T√§glich um 3:00 UTC - Hassfest validation (HA Standard)
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      action:
        description: 'Maintenance Action'
        required: true
        default: 'hassfest'
        type: choice
        options:
          - hassfest
          - generate-requirements
          - fix-code-quality
          - update-dependencies

concurrency:
  group: maintenance
  cancel-in-progress: false

jobs:
  # Manual maintenance actions
  manual-maintenance:
    name: Manual Maintenance
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black pyupgrade pre-commit
          
      - name: Run maintenance action
        run: |
          case "${{ github.event.inputs.action }}" in
            "generate-requirements")
              echo "üì¶ Generating requirements_test.txt..."
              python .github/scripts/generate_requirements.py
              echo "‚úÖ Requirements generated"
              cat requirements_test.txt
              ;;
            "fix-code-quality")
              echo "üîß Running HA code quality fixes..."
              python .github/scripts/ha_fix.py
              echo "‚úÖ Code quality fixes applied"
              ;;
            "update-dependencies")
              echo "üîÑ Updating dependencies..."
              python .github/scripts/generate_requirements.py
              python .github/scripts/ha_fix.py
              echo "‚úÖ Dependencies updated"
              ;;
            "hassfest")
              echo "üè† Running Hassfest validation..."
              ;;
          esac
          
      - name: Run Hassfest (for hassfest action)
        if: github.event.inputs.action == 'hassfest'
        uses: home-assistant/actions/hassfest@master
        
      - name: Commit changes (if any)
        if: github.event.inputs.action != 'hassfest'
        run: |
          if ! git diff --quiet; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add .
            git commit -m "ü§ñ Maintenance: ${{ github.event.inputs.action }}
            
            Applied via maintenance workflow:
            - Action: ${{ github.event.inputs.action }}
            - Timestamp: $(date -u)
            "
            git push
          else
            echo "No changes to commit"
          fi
  daily-hassfest:
    name: Daily HA Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        
      - name: Daily Hassfest Validation
        uses: home-assistant/actions/hassfest@master

  # Stale issues management - HA Standard
  stale:
    name: Stale Issues Management
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Stale Issues and PRs
        uses: actions/stale@v9
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: |
            This issue has been automatically marked as stale because it has not had 
            activity for 60 days. It will be closed in 7 days if no further activity occurs.
          stale-pr-message: |
            This pull request has been automatically marked as stale because it has not had 
            activity for 30 days. It will be closed in 7 days if no further activity occurs.
          stale-issue-label: 'stale'
          stale-pr-label: 'stale'
          days-before-stale: 60
          days-before-close: 7
          days-before-pr-stale: 30
