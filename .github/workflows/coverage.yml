name: Coverage & Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.13"
  COVERAGE_MIN: "95"

jobs:
  coverage:
    name: Test Coverage & Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pytest pytest-asyncio pytest-cov coverage[toml]
          pip install -U pytest-homeassistant-custom-component
          pip install -U homeassistant>=2025.9.3
          pip install -r requirements.txt
          pip install -r requirements_test.txt

      - name: Audit test requirements
        run: |
          python -m script.enforce_test_requirements

      - name: Run tests with coverage gate
        id: coverage_tests
        env:
          PYTHONPATH: .
        run: |
          python -m pytest \
            --cov=custom_components/pawcontrol \
            --cov-branch \
            --cov-report=xml:generated/coverage/coverage.xml \
            --cov-report=term-missing:skip-covered \
            --cov-report=html:generated/coverage \
            --cov-fail-under=${{ env.COVERAGE_MIN }} \
            tests/

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: generated/coverage/coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: pawcontrol-coverage

      - name: Publish lightweight coverage to GitHub Pages
        if: always() && steps.coverage_tests.outcome == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          python -m script.publish_coverage \
            --coverage-xml generated/coverage/coverage.xml \
            --coverage-html-index generated/coverage/index.html \
            --artifact-directory generated/coverage/artifacts \
            --mode pages \
            --pages-branch gh-pages \
            --pages-prefix coverage \
            --run-id "${{ github.run_id }}" \
            --run-attempt "${{ github.run_attempt }}" \
            --commit-sha "${{ github.sha }}" \
            --ref "${{ github.ref }}"

      - name: Upload GitHub Pages coverage archive
        if: always() && steps.coverage_tests.outcome == 'success'
        uses: actions/upload-artifact@v5
        with:
          name: coverage-pages-archive
          path: generated/coverage/artifacts/
          retention-days: 7
