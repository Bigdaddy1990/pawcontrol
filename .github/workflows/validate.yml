name: Validate

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  validate-hacs:
    runs-on: ubuntu-latest
    name: HACS Validation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: HACS validation
        uses: hacs/action@main
        with:
          category: "integration"

  validate-hassfest:
    runs-on: ubuntu-latest
    name: Hassfest Validation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Hassfest validation
        uses: home-assistant/actions/hassfest@master

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy
          
      - name: Run Black
        run: black --check custom_components/pawcontrol
        
      - name: Run isort
        run: isort --check-only custom_components/pawcontrol
        
      - name: Run Flake8
        run: flake8 custom_components/pawcontrol
        
      - name: Run mypy
        run: mypy custom_components/pawcontrol

  test:
    runs-on: ubuntu-latest
    name: Run Tests
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
          
      - name: Run pytest
        run: |
          pytest tests/ \
            --cov=custom_components.pawcontrol \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term
            
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
